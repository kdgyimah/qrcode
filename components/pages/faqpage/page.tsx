"use client";

import { useState } from "react";

type FAQItem = {
  id: string;
  question: string;
  answer: string;
};

type FAQCategory = {
  id: string;
  title: string;
  items: FAQItem[];
};

const FAQ_CATEGORIES: FAQCategory[] = [
  {
    id: "qrCodeBasics",
    title: "QR Code Basics",
    items: [
      {
        id: "faq1",
        question: "What is a QR code?",
        answer:
          "With QR Gen, a QR code is a type of 2D barcode that stores URLs, contacts, or data and can be scanned using any smartphone.",
      },
      {
        id: "faq2",
        question: "How do QR codes work?",
        answer:
          "With QR Gen, QR codes are generated by encoding data into pixel patterns readable by any standard QR scanner or camera.",
      },
      {
        id: "faq3",
        question: "Are QR codes free to use?",
        answer:
          "With QR Gen, you can generate static QR codes for free, while dynamic features may require a subscription.",
      },
      {
        id: "faq4",
        question: "What types of content can a QR code store?",
        answer:
          "With QR Gen, you can store URLs, emails, vCards, Wi-Fi credentials, phone numbers, or custom text in a QR code.",
      },
      {
        id: "faq5",
        question: "Do QR codes expire?",
        answer:
          "With QR Gen, static QR codes never expire. Dynamic QR codes may expire based on your plan.",
      },
      {
        id: "faq6",
        question: "Do I need internet to scan a QR code?",
        answer:
          "With QR Gen, scanning doesn’t need internet, but you’ll need it to access linked online content.",
      },
    ],
  },
  {
    id: "designAndCustomize",
    title: "Design & Customize",
    items: [
      {
        id: "faq7",
        question: "Can I change the color of my QR code?",
        answer:
          "With QR Gen, you can customize your QR code’s color to match your brand while keeping it scannable.",
      },
      {
        id: "faq8",
        question: "Is it possible to add a logo to my QR code?",
        answer:
          "With QR Gen, you can easily embed your logo in the center of your QR code without affecting scan quality.",
      },
      {
        id: "faq9",
        question: "Will customizing my QR code affect its scanability?",
        answer:
          "With QR Gen, customization is safe as long as high contrast is maintained and core areas are untouched.",
      },
      {
        id: "faq10",
        question: "Can I choose different shapes for the QR code modules?",
        answer:
          "With QR Gen, you can select from various shapes—dots, squares, or circles—to personalize your QR look.",
      },
      {
        id: "faq11",
        question: "Are there templates for QR code designs?",
        answer:
          "With QR Gen, you can start from professionally designed templates to save time and maintain branding.",
      },
      {
        id: "faq12",
        question: "Can I animate or make dynamic-looking QR codes?",
        answer:
          "With QR Gen, visually rich static designs are supported, though animated (moving) QR codes aren’t recommended.",
      },
    ],
  },
  {
    id: "downloadAndScan",
    title: "Download & Scan",
    items: [
      {
        id: "faq13",
        question: "How do I download my QR code?",
        answer:
          "With QR Gen, you can download your code in high-resolution formats like PNG, JPG, SVG, or PDF.",
      },
      {
        id: "faq14",
        question: "Which file format is best for printing QR codes?",
        answer:
          "With QR Gen, use SVG or PDF for printing to preserve sharp quality at any size.",
      },
      {
        id: "faq15",
        question: "Can I scan a QR code from a screen?",
        answer:
          "With QR Gen, all generated QR codes can be scanned from both paper and digital screens.",
      },
      {
        id: "faq16",
        question: "My QR code won’t scan — what could be wrong?",
        answer:
          "With QR Gen, ensure proper contrast, quiet zone, and sufficient size for successful scans.",
      },
      {
        id: "faq17",
        question: "Can I test my QR code before sharing it?",
        answer:
          "With QR Gen, you should always test across different devices to ensure full functionality.",
      },
      {
        id: "faq18",
        question: "Do I need a special app to scan QR codes?",
        answer:
          "With QR Gen, your QR codes work with default phone cameras—no app needed!",
      },
    ],
  },
];

// Accordion Item with animation
const FAQAccordionItem = ({ item }: { item: FAQItem }) => {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <div className="bg-white rounded-xl border border-gray-100 transition-shadow duration-200 mb-3 overflow-hidden">
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="w-full flex justify-between items-center px-5 py-4 text-left"
      >
        <h3 className="text-base sm:text-lg font-semibold text-gray-900">
          {item.question}
        </h3>
        <div className="w-8 h-8 flex items-center justify-center bg-blue-50 rounded-full">
          <svg
            className={`w-4 h-4 text-blue-600 transform transition-transform duration-200 ${
              isOpen ? "rotate-180" : ""
            }`}
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fillRule="evenodd"
              d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
              clipRule="evenodd"
            />
          </svg>
        </div>
      </button>
      <div
        className={`px-5 transition-all duration-300 ease-in-out ${
          isOpen ? "max-h-[500px] py-3" : "max-h-0 py-0"
        } overflow-hidden text-sm sm:text-base text-gray-600`}
      >
        {item.answer}
      </div>
    </div>
  );
};

const FAQAccordion = ({ data }: { data: FAQItem[] }) => (
  <div className="space-y-4">{data.map((item) => <FAQAccordionItem key={item.id} item={item} />)}</div>
);

const FAQPage = () => {
  const [activeTab, setActiveTab] = useState(FAQ_CATEGORIES[0].id);

  return (
    <div className="min-h-screen bg-gray-50 py-6 px-4 sm:px-6 lg:px-8">
      <div className="max-w-4xl mx-auto">
        <div className="text-center mb-8 sm:mb-12">
          <h1 className="text-2xl sm:text-3xl font-extrabold text-gray-900">
            Frequently Asked Questions
          </h1>
          <p className="mt-3 text-lg sm:text-xl text-gray-600">
            Find answers to common questions about QR codes
          </p>
        </div>

        {/* Tabs */}
        <div className="flex justify-center mb-8">
          <div className="inline-flex items-center bg-gray-50 px-2 py-1 rounded-lg">
            {FAQ_CATEGORIES.map((category) => (
              <button
                key={category.id}
                onClick={() => setActiveTab(category.id)}
                className={`px-4 sm:px-6 py-2 text-sm sm:text-base font-medium rounded-md transition-all duration-200
                ${
                  activeTab === category.id
                    ? "bg-white text-black border border-b-0 border-gray-200 rounded-t-md"
                    : "text-gray-600 hover:text-black"
                }`}
              >
                {category.title}
              </button>
            ))}
          </div>
        </div>

        {/* Content */}
        <div className="rounded-xl overflow-hidden">
          <div className="p-4 sm:p-6 md:p-8">
            {FAQ_CATEGORIES.map((category) => (
              <div
                key={category.id}
                className={activeTab === category.id ? "block" : "hidden"}
              >
                <FAQAccordion data={category.items} />
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default FAQPage;
